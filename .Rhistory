#1.1.1 Determine time ranges between cursors
tr.s1<-sample[["Cursors"]][1]:max(sample[["Pyrolysis"]]["t"])
tr.s1
})
sapply(list.extended, function(sample){
#1.1.1 Determine time ranges between cursors
tr.s1<-sample[["Cursors"]][1]+max(sample[["Pyrolysis"]]["t"])
tr.s1
})
#1.1.1 Determine time ranges between cursors
tr.s1<-(sample[["Cursors"]][1]):(max(sample[["Pyrolysis"]]["t"]))
sapply(list.extended, function(sample){
#1.1.1 Determine time ranges between cursors
tr.s1<-(sample[["Cursors"]][1]):(max(sample[["Pyrolysis"]]["t"]))
tr.s1
})
sapply(list.extended, function(sample){
#1.1.1 Determine time ranges between cursors
tr.s1<-sample[["Cursors"]][1]:max(sample[["Pyrolysis"]][["t"]])
tr.s1
})
sapply(list.extended, function(sample){
#1.1.1 Determine time ranges between cursors
tr.s1<-sample[["Cursors"]][1]:max(sample[["Pyrolysis"]][["t"]])
tr.s1
}, na.omit=T)
sapply(list.extended, function(sample){
#1.1.1 Determine time ranges between cursors
tr.s1<-sample[["Cursors"]][1]:max(sample[["Pyrolysis"]][["t"]], na.rm=T)
tr.s1
})
View(list.extended)
list.extended<-list.extended[1:10]
sapply(list.extended, function(sample){
#1.1.1 Determine time ranges between cursors
tr.s1<-sample[["Cursors"]][1]:max(sample[["Pyrolysis"]][["t"]])
tr.s1
})
list.extended<-list.converted
sapply(list.extended, function(sample){
#1.1.1 Determine time ranges between cursors
tr.s1<-sample[["Cursors"]][1]:length(sample[["Pyrolysis"]][["t"]])
tr.s1
})
#1.2 define safe max time slot in case of NAs
s.max<-function(x)ifelse( !all(is.na(x)), max(x, na.rm=T), NA)
1:NA
sequence(0,100,1)
seq(0,100,1)
seq(0,NA,1)
check2$S_2501_0001.B00[[NA]]
#1.2 define safe sequence in case of NAs
s.seq<-function(x,y)ifelse( !(all(is.na(x))|all(is.na(y))), seq(x,y,1), NA)
s.seq(list.extended$S_2501_0001.B00[["Cursors"]][1],max(list.extended$S_2501_0001.B00[["Pyrolysis"]][["t"]]))
list.extended$S_2501_0001.B00[["Cursors"]][1]
max(list.extended$S_2501_0001.B00[["Pyrolysis"]][["t"]]
)
max(list.extended$S_2501_0001.B00[["Pyrolysis"]][["t"]])
s.seq(180,1283,1)
s.seq(180,1283)
seq(0,100,1)
seq(0,100,by=1)
#1.2 define safe sequence in case of NAs
s.seq<-function(x,y)ifelse( !(all(is.na(x))|all(is.na(y))), seq(x,y,by=1), NA)
s.seq(180,1283)
seq(180,1283,by=1)
#1.2 define safe sequence in case of NAs
s.seq<-function(x,y){, NA)}
#1.2 define safe sequence in case of NAs
s.seq<-function(x,y){
if (all(is.na(x))|all(is.na(y)) {NA} else {
#1.2 define safe sequence in case of NAs
s.seq<-function(x,y){
if (all(is.na(x))|all(is.na(y)) {NA} else {
#1.2 define safe sequence in case of NAs
s.seq<-function(x,y){
}
#1.2 define safe sequence in case of NAs
s.seq<-function(x,y){
}
#1.2 define safe sequence in case of NAs
s.seq<-function(x,y){
if (all(is.na(x))|all(is.na(y))) {NA} else {
seq(x,y,by=1)}
}
s.seq(180,1283)
s.seq(NA,1283)
s.seq(1,12)
s.seq(1,NA)
lapply(list.extended, function(sample){
#1.1.1 Determine time ranges between cursors
tr.s1<-s.seq(sample[["Cursors"]][1],s.max(sample[["Pyrolysis"]]["t"]))
tr.s1
})
RE_plot(test,"S_2501_0035.B00")
test$S_2501_0001.B00$Cursors
max(NA)
max(c(1,1,NA,4))
idee<-list.converted$S_2501_0001.B00
idee<-list(idee,idee)
View(idee)
idee2<-list.converted$S_2501_0037.B00
idee<-list.converted$S_2501_0001.B00
idee<-list(idee,idee2)
View(idee2)
View(idee)
idee<-list.converted$S_2501_0001.B00
test<-append(idee,idee2)
View(test)
#1.1 take list to extend
list.extended<-list.converted
#1.2 define safe sequence in case of NAs
s.seq<-function(x,y){
if (all(is.na(x))|all(is.na(y))) {NA} else {
seq(x,y,by=1)}
}
#2 Determine zones for C
list.extended<-lapply(list.extended, function(sample){
#2.1.1 Determine time ranges between Rock-Eval cursors
tr.s1<-s.seq(min(sample[["Pyrolysis"]]["t"]),sample[["Cursors"]]["curs1.1"])
tr.s2<-s.seq(sample[["Cursors"]]["curs1.1"],max(sample[["Pyrolysis"]]["t"]))
#2.1.2 Compute the area between these cursors
S1<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s1],sample[["Pyrolysis"]][["CH"]][tr.s1])
S2<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s2],sample[["Pyrolysis"]][["CH"]][tr.s2])
curves<-c(S1,S2)
#2.1.3 Return the values as an addition to the original list
sample<-append(sample,curves)
sample
})
View(list.extended)
####
sample<-list.converted$S_2501_0001.B00
S1<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s1],sample[["Pyrolysis"]][["CH"]][tr.s1])
S2<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s2],sample[["Pyrolysis"]][["CH"]][tr.s2])
tr.s1<-s.seq(min(sample[["Pyrolysis"]]["t"]),sample[["Cursors"]]["curs1.1"])
tr.s2<-s.seq(sample[["Cursors"]]["curs1.1"],max(sample[["Pyrolysis"]]["t"]))
S1<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s1],sample[["Pyrolysis"]][["CH"]][tr.s1])
S2<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s2],sample[["Pyrolysis"]][["CH"]][tr.s2])
zones<-c(S1,S2)
zones<-c(S1=S1,S2=S2)
#2.1.3 Return the values as an addition to the original list
sample<-append(sample,curves)
#2.1.3 Return the values as an addition to the original list
sample<-append(sample,zones)
View(sample)
zones<-ls(S1=S1,S2=S2)
zones<-list(S1=S1,S2=S2)
View(zones)
####
sample<-list.converted$S_2501_0001.B00
tr.s1<-s.seq(min(sample[["Pyrolysis"]]["t"]),sample[["Cursors"]]["curs1.1"])
tr.s2<-s.seq(sample[["Cursors"]]["curs1.1"],max(sample[["Pyrolysis"]]["t"]))
S1<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s1],sample[["Pyrolysis"]][["CH"]][tr.s1])
S2<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s2],sample[["Pyrolysis"]][["CH"]][tr.s2])
zones<-c(S1,S2)
sample<-append(sample,zones)
View(sample)
sample<-list.converted$S_2501_0001.B00
tr.s1<-s.seq(min(sample[["Pyrolysis"]]["t"]),sample[["Cursors"]]["curs1.1"])
tr.s2<-s.seq(sample[["Cursors"]]["curs1.1"],max(sample[["Pyrolysis"]]["t"]))
S1<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s1],sample[["Pyrolysis"]][["CH"]][tr.s1])
S2<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s2],sample[["Pyrolysis"]][["CH"]][tr.s2])
zones<-list(S1,S2)
sample<-append(sample,zones)
View(sample)
####
sample<-list.converted$S_2501_0001.B00
View(sample)
tr.s1<-s.seq(min(sample[["Pyrolysis"]]["t"]),sample[["Cursors"]]["curs1.1"])
tr.s2<-s.seq(sample[["Cursors"]]["curs1.1"],max(sample[["Pyrolysis"]]["t"]))
S1<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s1],sample[["Pyrolysis"]][["CH"]][tr.s1])
S2<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s2],sample[["Pyrolysis"]][["CH"]][tr.s2])
zones<-list(S1,S2)
sample<-append(sample,zones)
sample<-list.converted$S_2501_0001.B00
tr.s1<-s.seq(min(sample[["Pyrolysis"]]["t"]),sample[["Cursors"]]["curs1.1"])
tr.s2<-s.seq(sample[["Cursors"]]["curs1.1"],max(sample[["Pyrolysis"]]["t"]))
S1<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s1],sample[["Pyrolysis"]][["CH"]][tr.s1])
S2<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s2],sample[["Pyrolysis"]][["CH"]][tr.s2])
zones<-list(S1=S1,S2=S2)
sample<-append(sample,zones)
rm(sample)
####
sample<-list.converted$S_2501_0001.B00
tr.s1<-s.seq(min(sample[["Pyrolysis"]]["t"]),sample[["Cursors"]]["curs1.1"])
tr.s2<-s.seq(sample[["Cursors"]]["curs1.1"],max(sample[["Pyrolysis"]]["t"]))
S1<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s1],sample[["Pyrolysis"]][["CH"]][tr.s1])
S2<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s2],sample[["Pyrolysis"]][["CH"]][tr.s2])
zones<-list(S1=S1,S2=S2)
sample<-append(sample,zones)
sample<-
length(sample)
sample<-list.converted$S_2501_0001.B00
tr.s1<-s.seq(min(sample[["Pyrolysis"]]["t"]),sample[["Cursors"]]["curs1.1"])
tr.s2<-s.seq(sample[["Cursors"]]["curs1.1"],max(sample[["Pyrolysis"]]["t"]))
S1<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s1],sample[["Pyrolysis"]][["CH"]][tr.s1])
S2<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s2],sample[["Pyrolysis"]][["CH"]][tr.s2])
zones<-list(S1=S1,S2=S2)
length(sample)
sample<-list.converted$S_2501_0001.B00
tr.s1<-s.seq(min(sample[["Pyrolysis"]]["t"]),sample[["Cursors"]]["curs1.1"])
tr.s2<-s.seq(sample[["Cursors"]]["curs1.1"],max(sample[["Pyrolysis"]]["t"]))
S1<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s1],sample[["Pyrolysis"]][["CH"]][tr.s1])
S2<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s2],sample[["Pyrolysis"]][["CH"]][tr.s2])
zones<-c(S1=S1,S2=S2)
sample[length(sample)+1]<-zones
sample<-list.converted$S_2501_0001.B00
tr.s1<-s.seq(min(sample[["Pyrolysis"]]["t"]),sample[["Cursors"]]["curs1.1"])
tr.s2<-s.seq(sample[["Cursors"]]["curs1.1"],max(sample[["Pyrolysis"]]["t"]))
S1<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s1],sample[["Pyrolysis"]][["CH"]][tr.s1])
S2<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s2],sample[["Pyrolysis"]][["CH"]][tr.s2])
zones<-list(S1=S1,S2=S2)
sample[length(sample)+1]<-zones
View(sample)
####
sample<-list.converted$S_2501_0001.B00
tr.s1<-s.seq(min(sample[["Pyrolysis"]]["t"]),sample[["Cursors"]]["curs1.1"])
tr.s2<-s.seq(sample[["Cursors"]]["curs1.1"],max(sample[["Pyrolysis"]]["t"]))
S1<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s1],sample[["Pyrolysis"]][["CH"]][tr.s1])
S2<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s2],sample[["Pyrolysis"]][["CH"]][tr.s2])
zones<-list(S1=S1,S2=S2)
View(sample)
sample[[length(sample)+1]]<-zones
####
sample<-list.converted$S_2501_0001.B00
tr.s1<-s.seq(min(sample[["Pyrolysis"]]["t"]),sample[["Cursors"]]["curs1.1"])
tr.s2<-s.seq(sample[["Cursors"]]["curs1.1"],max(sample[["Pyrolysis"]]["t"]))
S1<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s1],sample[["Pyrolysis"]][["CH"]][tr.s1])
S2<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s2],sample[["Pyrolysis"]][["CH"]][tr.s2])
zones<-list(S1=S1,S2=S2)
sample[["Zones"]]<-zones
sample<-list.converted$S_2501_0001.B00
tr.s1<-s.seq(min(sample[["Pyrolysis"]]["t"]),sample[["Cursors"]]["curs1.1"])
tr.s2<-s.seq(sample[["Cursors"]]["curs1.1"],max(sample[["Pyrolysis"]]["t"]))
S1<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s1],sample[["Pyrolysis"]][["CH"]][tr.s1])
S2<-RE_traparea(sample[["Pyrolysis"]][["t"]][tr.s2],sample[["Pyrolysis"]][["CH"]][tr.s2])
zones<-c(S1=S1,S2=S2)
sample[["Zones"]]<-zones
rm(list=ls())
library(tidyverse)
devtools::load_all()
dataloc<-"D:/PhD/Rock-Eval/Maarten_2501 - Copy/BULK ROCK"
test<-RE_read(dataloc)
test2<-RE_convert(test)
test3<-RE_surfaces(test2)
warnings()
rm(list=ls())
library(tidyverse)
devtools::load_all()
dataloc<-"D:/PhD/Rock-Eval/Maarten_2501 - Copy/BULK ROCK"
test<-RE_read(dataloc)
test2<-RE_convert(test)
test3<-RE_surfaces(test2)
View(test3)
RE_plot(test2)
RE_plot(test)
RE_plot(test,"S_2501_0035.B00")
RE_plot(test2,"S_2501_0035.B00")
sample<-test2$S_2501_0001.B00
tr.s4CO<-s.seq(min(sample[["Oxidation"]]["t"]),sample[["Cursors"]]["curs4.4"])
#1.2 define safe sequence in case of NAs
s.seq<-function(x,y){
if (all(is.na(x))|all(is.na(y))) {NA} else {
seq(x,y,by=1)}
}
tr.s4CO<-s.seq(min(sample[["Oxidation"]]["t"]),sample[["Cursors"]]["curs4.4"])
tr.s4COi<-s.seq(sample[["Cursors"]]["curs4.4"],max(sample[["Oxidation"]]["t"]))
tr.s4CO2<-s.seq(min(sample[["Oxidation"]]["t"]),sample[["Cursors"]]["curs5.4"])
tr.s5<-s.seq(sample[["Cursors"]]["curs5.4"],max(sample[["Oxidation"]]["t"]))
sample[["Cursors"]]["curs5.4"]
sample[["Cursors"]]
View(test3)
#
cursLU<-data.frame(
curs=c(
paste0("curs1.",1:6),
"base1",
paste0("curs2.",1:3),
"base2",
paste0("curs3.",1:3),
"base3",
paste0("curs4.",1:4),
"base4",
paste0("curs5.",1:4),
"base5",
paste0("curs6.",1:5),
"base6",
paste0("curs7.",1:5),
"base7"))
cursLU$type<-substr(cursLU$curs,1,4)
cursLU$oven<-c(
rep("Pyrolysis",7),
rep("Pyrolysis",4),
rep("Pyrolysis",4),
rep("Oxidation",5),
rep("Oxidation",5),
rep("Pyrolysis",6),
rep("Oxidation",6))
cursLU$thermo<-c(
rep("CH",7),
rep("CO",4),
rep("CO2",4),
rep("CO",5),
rep("CO2",5),
rep("SO2",6),
rep("SO2",6))
cursLU<-data.frame(
curs=c(
paste0("curs1.",1:6),
"base1",
paste0("curs2.",1:3),
"base2",
paste0("curs3.",1:3),
"base3",
paste0("curs4.",1:4),
"base4",
paste0("curs5.",1:4),
"base5",
paste0("curs6.",1:5),
"base6",
paste0("curs7.",1:5),
"base7"))
cursLU$type<-substr(cursLU$curs,1,4)
cursLU$oven<-c(
rep("Pyrolysis",7),
rep("Pyrolysis",4),
rep("Pyrolysis",4),
rep("Oxidation",5),
rep("Oxidation",5),
rep("Pyrolysis",6),
rep("Oxidation",6))
cursLU$thermo<-c(
rep("CH",7),
rep("CO",4),
rep("CO2",4),
rep("CO",5),
rep("CO2",5),
rep("SO2",6),
rep("SO2",6))
cursLU$no<-c(
1:6,  0,  1:3,  0,  1:3,  0,  1:4,  0,  1:4,  0,  1:5,  0,  1:5,  0)
usethis::use_data(cursLU, internal = TRUE)
cursLU<-data.frame(
curs=c(
paste0("curs1.",1:6),
"base1",
paste0("curs2.",1:3),
"base2",
paste0("curs3.",1:3),
"base3",
paste0("curs4.",1:4),
"base4",
paste0("curs5.",1:4),
"base5",
paste0("curs6.",1:5),
"base6",
paste0("curs7.",1:5),
"base7"))
cursLU$type<-substr(cursLU$curs,1,4)
cursLU$oven<-c(
rep("Pyrolysis",7),
rep("Pyrolysis",4),
rep("Pyrolysis",4),
rep("Oxidation",5),
rep("Oxidation",5),
rep("Pyrolysis",6),
rep("Oxidation",6))
cursLU$thermo<-c(
rep("CH",7),
rep("CO",4),
rep("CO2",4),
rep("CO",5),
rep("CO2",5),
rep("SO2",6),
rep("SO2",6))
cursLU$no<-c(
1:6,  0,  1:3,  0,  1:3,  0,  1:4,  0,  1:4,  0,  1:5,  0,  1:5,  0)
usethis::use_data(cursLU, internal = TRUE, overwrite = TRUE)
rm(list=ls())
library(tidyverse)
devtools::load_all()
dataloc<-"D:/PhD/Rock-Eval/Maarten_2501 - Copy/BULK ROCK"
test<-RE_read(dataloc)
test2<-RE_convert(test)
test3<-RE_surfaces(test2)
View(test3)
sample<-test2$S_2501_0001.B00
#1.2 define safe sequence in case of NAs
s.seq<-function(x,y){
if (all(is.na(x))|all(is.na(y))) {NA} else {
seq(x,y,by=1)}
}
tr.s4CO2<-s.seq(min(sample[["Oxidation"]]["t"]),sample[["Cursors"]]["curs5.4"])
tr.s5<-s.seq(sample[["Cursors"]]["curs5.4"],max(sample[["Oxidation"]]["t"]))
sample[["Cursors"]]["curs5.4"]
sample[["Cursors"]]
rm(list=ls())
library(tidyverse)
devtools::load_all()
dataloc<-"D:/PhD/Rock-Eval/Maarten_2501 - Copy/BULK ROCK"
test<-RE_read(dataloc)
test2<-RE_convert(test)
test3<-RE_surfaces(test2)
sample<-test2$S_2501_0001.B00
View(sample)
View(test3)
rm(list=ls())
library(tidyverse)
devtools::load_all()
dataloc<-"D:/PhD/Rock-Eval/Maarten_2501 - Copy/BULK ROCK"
test<-RE_read(dataloc)
test2<-RE_convert(test)
test3<-RE_surfaces(test2)
sample<-test2$S_2501_0001.B00
View(test3)
sample[["Cursors"]]
rm(list=ls())
library(tidyverse)
devtools::load_all()
dataloc<-"D:/PhD/Rock-Eval/Maarten_2501 - Copy/BULK ROCK"
test<-RE_read(dataloc)
test2<-RE_convert(test)
test3<-RE_surfaces(test2)
sample<-test2$S_2501_0001.B00
View(sample)
View(sample)
rm(list=ls())
library(tidyverse)
devtools::load_all()
dataloc<-"D:/PhD/Rock-Eval/Maarten_2501 - Copy/BULK ROCK"
test<-RE_read(dataloc)
test2<-RE_convert(test)
test3<-RE_surfaces(test2)
sample<-test2$S_2501_0001.B00
plot(test,"S_2501_0001.B00")
RE_plot(test,"S_2501_0001.B00")
sample<-test2$S_2501_0001.B00
RE_traparea(sample[["Oxidation"]][["t"]],sample[["Oxidation"]][["CO"]])
cut<-sample$Oxidation[sample$Oxidation$CO2>550 & sample$Oxidation$CO2<720,]
cut<-sample$Oxidation[sample$Oxidation$CO2>550,]
cut<-sample$Oxidation[sample$Oxidation$T>550,]
cut<-sample$Oxidation[sample$Oxidation$T>550 & sample$Oxidation$T<720,]
time<-cut$t[min(cut$CO2)]
min(cut$CO2)
time<-cut$t[which.min(cut$CO2)]
cut2<-cut[which.min(cut$CO2),]
View(cut2)
cut<-sample$Oxidation[sample$Oxidation$T>550 & sample$Oxidation$T<720,]
View(cut)
cut<-sample$Oxidation[sample$Oxidation$T>550 & sample$Oxidation$T<720 & sample$Oxidation$t<1500,]
time<-cut$t[which.min(cut$CO2)]
sample$Cursors
cursLU<-data.frame(
curs=c(
paste0("curs1.",1:6),
"base1",
paste0("curs2.",1:3),
"base2",
paste0("curs3.",1:3),
"base3",
paste0("curs4.",1:4),
"base4",
paste0("curs5.",1:4),
"base5",
paste0("curs6.",1:5),
"base6",
paste0("curs7.",1:5),
"base7"))
cursLU$type<-substr(cursLU$curs,1,4)
cursLU$oven<-c(
rep("Pyrolysis",7),
rep("Pyrolysis",4),
rep("Pyrolysis",4),
rep("Pyrolysis",5),
rep("Oxidation",5),
rep("Oxidation",6),
rep("Oxidation",6))
cursLU$thermo<-c(
rep("CH",7),
rep("CO",4),
rep("CO2",4),
rep("SO2",5),
rep("CO",5),
rep("CO2",6),
rep("SO2",6))
cursLU$no<-c(
1:6,  0,  1:3,  0,  1:3,  0,  1:4,  0,  1:4,  0,  1:5,  0,  1:5,  0)
usethis::use_data(cursLU, internal = TRUE, overwrite = TRUE)
RE_plot(test,"S_2501_0001.B00")
rm(list=ls())
library(tidyverse)
devtools::load_all()
dataloc<-"D:/PhD/Rock-Eval/Maarten_2501 - Copy/BULK ROCK"
test<-RE_read(dataloc)
RE_plot(test,"S_2501_0001.B00")
sample<-test2$S_2501_0001.B00
test2<-RE_convert(test)
sample<-test2$S_2501_0001.B00
sample$Cursors
rm(list=ls())
library(tidyverse)
devtools::load_all()
dataloc<-"D:/PhD/Rock-Eval/Maarten_2501 - Copy/BULK ROCK"
test<-RE_read(dataloc)
RE_plot(test,1)
test2<-RE_convert(test)
test3<-RE_surfaces(test2)
View(test3)
RE_plot(test,1,"Oxidation")
RE_plot(test,1,"Pyrolysis")
devtools::document()
rm(list=ls())
